# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pAdvDdoayCtQykQwZAuXglE9wZRmsvVW
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score,confusion_matrix
from sklearn import svm

"""importing the data set"""

diabet = pd.read_csv('/content/diabetes.csv')

diabet.head(5)

diabet.info()

diabet.shape

"""we check if there is a missing value"""

diabet.isnull().value_counts()

diabet.describe()

diabet['Outcome'].value_counts()

diabet.groupby('Outcome').mean()

"""Tha given data set does not have any missing value and it is clear,
so we go to separeting data and labels
"""

X = diabet.drop(columns=['Outcome'],axis=1)
y = diabet['Outcome']

print('X ',X)
print(y)

"""standardize the data for a better machine learning prediction"""

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

print(X_scaled)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)

"""training the model"""

sv = svm.SVC(kernel='linear')

sv.fit(X_train,y_train)

"""evaluating the model"""

predictions = sv.predict(X_test)

accuracy = accuracy_score(y_test,predictions)

print('accuracy score:',accuracy)

cm = confusion_matrix(y_test,predictions)

print(cm)

"""creating a prediction system"""

input_data = (3,126,88,41,235,39.3,0.704,27)
input_array = np.asarray(input_data)
input_array_reshaped = input_array.reshape(1,-1)

input_standardize = scaler.transform(input_array_reshaped)

print(input_standardize)

prediction = sv.predict(input_standardize)
print(prediction)

if (prediction[0]==0):
  print('the person is non diabetic')
else:
  print('the person is diabetic')