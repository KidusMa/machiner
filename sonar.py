# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1stiGFb47d_vvub-_XnSQIj2JgNccUCIu
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score,confusion_matrix

sonar = pd.read_csv('/content/sonar.all-data.csv',header=None)

sonar.head(5)

sonar.describe()

sonar[60].value_counts()

sonar.groupby(60).mean()

sonar.columns

X = sonar.drop(columns=60,axis=1)
y = sonar[60]

print(X)
print(y)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)

print(X_train.shape, X_test.shape)

print(y_train.shape, y_test.shape)

lg = LogisticRegression()

lg.fit(X_train,y_train)

"""accuracy on train data"""

x_train_predictions = lg.predict(X_train)
train_data_accuracy = accuracy_score(x_train_predictions,y_train)
print('train_data_accuracy :',train_data_accuracy)

"""accuarcy on test data"""

x_test_prediction = lg.predict(X_test)
test_data_accuracy = accuracy_score(x_test_prediction,y_test)
print('test_data_accuracy :',test_data_accuracy)



input_data = (0.0094,0.0333,0.0306,0.0376,0.1296,0.1795,0.1909,0.1692,0.1870,0.1725,0.2228,0.3106,0.4144,0.5157,0.5369,0.5107,0.6441,0.7326,0.8164,0.8856,0.9891,1.0000,0.8750,0.8631,0.9074,0.8674,0.7750,0.6600,0.5615,0.4016,0.2331,0.1164,0.1095,0.0431,0.0619,0.1956,0.2120,0.3242,0.4102,0.2939,0.1911,0.1702,0.1010,0.1512,0.1427,0.1097,0.1173,0.0972,0.0703,0.0281,0.0216,0.0153,0.0112,0.0241,0.0164,0.0055,0.0078,0.0055,0.0091,0.0067)

input_asarray = np.asarray(input_data)

input_reshape = input_asarray.reshape(1,-1)

predictions = lg.predict(input_reshape)
print(predictions)

if (predictions[0]=='R'):
  print('the object is rock')
else:
  print('the object is mine')

